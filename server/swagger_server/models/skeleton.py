# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.point import Point  # noqa: F401,E501
from swagger_server import util


class Skeleton(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: int=None, landmarks: List[Point]=None):  # noqa: E501
        """Skeleton - a model defined in Swagger

        :param id: The id of this Skeleton.  # noqa: E501
        :type id: int
        :param landmarks: The landmarks of this Skeleton.  # noqa: E501
        :type landmarks: List[Point]
        """
        self.swagger_types = {
            'id': int,
            'landmarks': List[Point]
        }

        self.attribute_map = {
            'id': 'id',
            'landmarks': 'landmarks'
        }
        self._id = id
        self._landmarks = landmarks

    @classmethod
    def from_dict(cls, dikt) -> 'Skeleton':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Skeleton of this Skeleton.  # noqa: E501
        :rtype: Skeleton
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this Skeleton.


        :return: The id of this Skeleton.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this Skeleton.


        :param id: The id of this Skeleton.
        :type id: int
        """

        self._id = id

    @property
    def landmarks(self) -> List[Point]:
        """Gets the landmarks of this Skeleton.


        :return: The landmarks of this Skeleton.
        :rtype: List[Point]
        """
        return self._landmarks

    @landmarks.setter
    def landmarks(self, landmarks: List[Point]):
        """Sets the landmarks of this Skeleton.


        :param landmarks: The landmarks of this Skeleton.
        :type landmarks: List[Point]
        """

        self._landmarks = landmarks
