# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Project(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, name: str=None, author_name: str=None, sample_urls: List[str]=None, remark_text: str=None):  # noqa: E501
        """Project - a model defined in Swagger

        :param name: The name of this Project.  # noqa: E501
        :type name: str
        :param author_name: The author_name of this Project.  # noqa: E501
        :type author_name: str
        :param sample_urls: The sample_urls of this Project.  # noqa: E501
        :type sample_urls: List[str]
        :param remark_text: The remark_text of this Project.  # noqa: E501
        :type remark_text: str
        """
        self.swagger_types = {
            'name': str,
            'author_name': str,
            'sample_urls': List[str],
            'remark_text': str
        }

        self.attribute_map = {
            'name': 'name',
            'author_name': 'authorName',
            'sample_urls': 'sampleUrls',
            'remark_text': 'remarkText'
        }
        self._name = name
        self._author_name = author_name
        self._sample_urls = sample_urls
        self._remark_text = remark_text

    @classmethod
    def from_dict(cls, dikt) -> 'Project':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Project of this Project.  # noqa: E501
        :rtype: Project
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self) -> str:
        """Gets the name of this Project.


        :return: The name of this Project.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this Project.


        :param name: The name of this Project.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")  # noqa: E501

        self._name = name

    @property
    def author_name(self) -> str:
        """Gets the author_name of this Project.


        :return: The author_name of this Project.
        :rtype: str
        """
        return self._author_name

    @author_name.setter
    def author_name(self, author_name: str):
        """Sets the author_name of this Project.


        :param author_name: The author_name of this Project.
        :type author_name: str
        """
        if author_name is None:
            raise ValueError("Invalid value for `author_name`, must not be `None`")  # noqa: E501

        self._author_name = author_name

    @property
    def sample_urls(self) -> List[str]:
        """Gets the sample_urls of this Project.


        :return: The sample_urls of this Project.
        :rtype: List[str]
        """
        return self._sample_urls

    @sample_urls.setter
    def sample_urls(self, sample_urls: List[str]):
        """Sets the sample_urls of this Project.


        :param sample_urls: The sample_urls of this Project.
        :type sample_urls: List[str]
        """
        if sample_urls is None:
            raise ValueError("Invalid value for `sample_urls`, must not be `None`")  # noqa: E501

        self._sample_urls = sample_urls

    @property
    def remark_text(self) -> str:
        """Gets the remark_text of this Project.


        :return: The remark_text of this Project.
        :rtype: str
        """
        return self._remark_text

    @remark_text.setter
    def remark_text(self, remark_text: str):
        """Sets the remark_text of this Project.


        :param remark_text: The remark_text of this Project.
        :type remark_text: str
        """
        if remark_text is None:
            raise ValueError("Invalid value for `remark_text`, must not be `None`")  # noqa: E501

        self._remark_text = remark_text
